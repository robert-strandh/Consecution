(cl:in-package #:sicl-sequence)

(defmacro with-predicate ((name predicate &key (arity 1)) &body body)
  (let ((args (loop repeat arity collect (gensym))))
    (sicl-utilities:with-gensyms (f)
      `(let ((,f (function-designator-function ,predicate)))
         (declare (function ,f))
         (flet ((,name ,args (funcall ,f ,@args)))
           (declare (inline ,name))
           ,@body)))))
